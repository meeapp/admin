{"version":3,"sources":["webpack:///./src/app/pages/test-management/test-management.module.ts","webpack:///./src/app/pages/test-management/test-management.page.html","webpack:///./src/app/pages/test-management/test-management.page.scss","webpack:///./src/app/pages/test-management/test-management.page.ts","webpack:///./src/app/pages/test-management/test-management.service.ts"],"names":[],"mappings":"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","file":"pages-test-management-test-management-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestManagementPage } from './test-management.page';\nimport { ModalEditTestComponent } from 'src/app/components/modal-edit-test/modal-edit-test.component';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { TabulatorTableComponent } from 'src/app/components/tabulator-table/tabulator-table.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestManagementPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule,\n    ComponentsModule,\n    RouterModule.forChild(routes)\n  ],\n  entryComponents: [\n    TabulatorTableComponent,\n    ModalEditTestComponent\n  ],\n  declarations: [TestManagementPage]\n})\nexport class TestManagementPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button color=\\\"colormain\\\" class=\\\"color-text\\\"></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        Quản lí bài test\\n      </ion-title>\\n      <ion-buttons slot=\\\"end\\\" no-padding mode=\\\"md\\\">\\n        <ion-button *ngIf=\\\"appValueService.APP_PLATFORM_DESKTOP\\\" class=\\\"product-avarta\\\" hideWhen=\\\"android,ios\\\">\\n          <ion-icon mode=\\\"md\\\" slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\n          {{appValueService.APP_AUTHENTICATION.userName}}\\n        </ion-button>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-header>\\n  <ion-content #contentSearch id=\\\"contentSearch\\\">\\n    <app-tabulator-table [tableData]=\\\"testService.listTest\\\" [columnNames]=\\\"testService.columnsTable\\\"\\n      [height]=\\\"heightTable\\\" idElement=\\\"example-table\\\" (rowClickEvent)=\\\"showDetail($event, 'edit')\\\">\\n    </app-tabulator-table>\\n  </ion-content>\\n  <ion-footer>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-button (click)=\\\"showDetail($event, 'add')\\\" *ngIf=\\\"appValueService.APP_PLATFORM_DESKTOP\\\" type=\\\"button\\\"\\n          class=\\\"color-button color-button-fix product-function-button-p button-size\\\">Thêm bài test\\n        </ion-button>\\n        <ion-grid *ngIf=\\\"!appValueService.APP_PLATFORM_DESKTOP\\\" class=\\\"product-function-button-m product-grid-button\\\"\\n          no-padding>\\n          <ion-row align-items-center no-padding>\\n            <ion-col size=\\\"3\\\" class=\\\"text-center\\\" no-padding>\\n              <ion-button type=\\\"button\\\" (click)=\\\"showDetail($event, 'add')\\\" class=\\\"product-search-button color-button\\\">\\n                <ion-icon name=\\\"cloud-upload\\\" class=\\\"product-search-icon\\\" no-padding></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"text-center\\\" no-padding>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-buttons>\\n    </ion-toolbar>\\n  </ion-footer>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Rlc3QtbWFuYWdlbWVudC90ZXN0LW1hbmFnZW1lbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PopoverController } from '@ionic/angular';\nimport { UtilsService } from 'src/app/services/utils.service';\nimport { AppValueService } from 'src/app/services/app-value.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ModalEditTestComponent } from 'src/app/components/modal-edit-test/modal-edit-test.component';\nimport { TestManagementService } from './test-management.service';\n\n@Component({\n  selector: 'app-test-management',\n  templateUrl: './test-management.page.html',\n  styleUrls: ['./test-management.page.scss'],\n})\nexport class TestManagementPage implements OnInit {\n  @ViewChild('contentSearch') contentSearch: any;  \n  heightTable = \"775\";\n  constructor(private popoverController: PopoverController,\n    public testService: TestManagementService,\n    public utilsService: UtilsService,\n    public appValueService: AppValueService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n  }\n  showDetail(data: any, mode: any) {\n    if(mode == \"edit\"){\n      this.showModalEditTest(data.ev, data.row._row.data);\n    }\n    else {\n      this.showModalEditTest(null, null);\n    }    \n  }\n\n  async showModalEditTest(ev: any, row: any) {\n    const popover = await this.popoverController.create({\n      component: ModalEditTestComponent,\n      id: \"editTestModal\",\n      event: ev,\n      translucent: true,\n      backdropDismiss: false,\n      componentProps: { rowProduct: row },\n      cssClass: \"edit-test-popover\"\n    });\n    return await popover.present();\n  }\n  ionViewDidEnter() {\n    this.heightTable = this.contentSearch.el.offsetHeight;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ConstantsService } from 'src/app/services/constants.service';\nimport { AngularFireDatabase } from '@angular/fire/database';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestManagementService {  \n  columnsTable = [\n    { title: \"ID\", field: \"id\", align: \"left\", width: 50 },\n    { title: \"Tên bài test\", field: \"test_name\", align: \"left\", width: 300 },\n    { title: \"Số lần test\", field: \"test_quantity\", align: \"left\", width: 200 },\n    { title: \"Active\", field: \"active\", align: \"left\", width: 100 }\n  ];\n  listTest: any[] = [];\n  constructor(private constantsService: ConstantsService,\n    public db: AngularFireDatabase,\n    private utilsService: UtilsService) {\n    this.getListUser();\n  }\n  getListUser() {\n    let listU = this.db.list(\"TestSkin/\");\n    listU.valueChanges().subscribe(test => {\n      this.listTest = [];\n      if (test) {\n        for (let index = 0; index < test.length; index++) {\n          const element: any = test[index];\n          this.listTest.push(element);\n        }\n      }\n    });\n  }\n}\n"],"sourceRoot":""}